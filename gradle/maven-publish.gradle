apply plugin: 'maven'

ext.optionalDeps = []
ext.providedDeps = []

ext.optional = { optionalDeps << it }
ext.provided = { providedDeps << it }

def sonatypeUsername = project.hasProperty('sonatypeUsername') ? project['sonatypeUsername'] : ''
def sonatypePassword = project.hasProperty('sonatypePassword') ? project['sonatypePassword'] : ''

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            modifyPom(pom, project)
        }
    }
}

def modifyPom(pom, gradleProject){
    pom.whenConfigured { generatedPom ->
        // respect 'optional' and 'provided' dependencies
        gradleProject.optionalDeps.each { dep ->
            generatedPom.dependencies.findAll { it.artifactId == dep.name }*.optional = true
        }
        gradleProject.providedDeps.each { dep ->
            generatedPom.dependencies.findAll { it.artifactId == dep.name }*.scope = 'provided'
        }

        // eliminate test-scoped dependencies (no need in maven central poms)
        generatedPom.dependencies.removeAll { dep ->
            dep.scope == 'test'
        }

        // add all items necessary for maven central publication
        generatedPom.project {
            name = gradleProject.name
            description = gradleProject.description
            url = 'https://github.com/Polidea/AndroidImageCache'
            organization {
                name = 'Polidea'
                url = 'http://polidea.pl'
            }
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
            }
            scm {
                url = 'https://github.com/Polidea/AndroidImageCache'
                connection = 'scm:git:git://github.com/Polidea/AndroidImageCache'
                developerConnection = 'scm:git:git://github.com/Polidea/AndroidImageCache'
            }
            developers {
                developer {
                    id = 'przemyslaw.jakubczyk'
                    name = 'Przemysław Jakubczyk'
                    email = 'przemyslaw.jakubczyk@polidea.pl'
                }
                developer {
                    id = 'mateusz.grzechocinski'
                    name = 'Mateusz Grzechociński'
                    email = 'mateusz.grzechocinski@polidea.pl'
                }
            }
        }
    }
}
