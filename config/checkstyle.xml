<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--

  Checkstyle configuration that checks the sun coding conventions from:

    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/
    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

    - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.

-->

<module name="Checker">
    <!--
            If you set the basedir property below, then all reported file
            names will be relative to the specified directory. See
            http://checkstyle.sourceforge.net/5.x/config.html#Checker

            <property name="basedir" value="${basedir}"/>
        -->

    <!-- Checks that a package-info.java file exists for each package.   -->
    <!-- See http://checkstyle.sourceforge.net/config_javadoc.html#JavadocPackage -->
    <!--<module name="JavadocPackage"/>-->

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sourceforge.net/config_misc.html#NewlineAtEndOfFile -->
    <!--<module name="NewlineAtEndOfFile"/>-->

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sourceforge.net/config_misc.html#Translation -->
    <!--<module name="Translation"/>-->

    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sourceforge.net/config_sizes.html -->
    <module name="FileLength"/>

    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sourceforge.net/config_whitespace.html -->
    <!--<module name="FileTabCharacter"/>-->

    <!-- Miscellaneous other checks.                   -->
    <!-- See http://checkstyle.sourceforge.net/config_regexp.html -->
    <module name="RegexpSingleline">
        <property name="format" value="\s+$"/>
        <property name="message" value="Line has trailing spaces."/>
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="^\s*;\s*$"/>
        <property name="message" value="Line has empty semicolon."/>
    </module>
    <module name="RegexpMultiline">
        <property name="id" value="systemErrOutPrint"/>
        <property name="format" value="System\s*\.(err|out)\s*\.print"/>
        <property name="message" value="Illegal usage of System.out.println() - use logger instead"/>
    </module>
    <module name="RegexpMultiline">
        <property name="format" value="\\u0[01](\d[a-f]|[a-f]\d)"/>
        <property name="fileExtensions" value="properties"/>
        <property name="message" value="Unicode is specified with lowercase (a-f) - use uppercase (A-F) e.g. \u00F3"/>
    </module>
    <module name="RegexpMultiline">
        <property name="format" value="^.* class .* \{\n\t"/>
        <property name="fileExtensions" value="java"/>
        <property name="message" value="The new line is required after definition of class"/>
    </module>

    <module name="TreeWalker">

        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sourceforge.net/config_javadoc.html -->
        <!--<module name="JavadocMethod"/>-->
        <!--<module name="JavadocVariable"/>-->
        <!--<module name="JavadocStyle"/>-->

        <module name="JavadocType">
            <property name="scope" value="public"/>
            <property name="authorFormat"
                      value="[A-ZĆŁŚŹŻ]{1}[a-ząćęłńóśźż]* [A-ZĆŁŚŹŻ]{1}[a-ząćęłńóśźż]*(-[A-ZĆŁŚŹŻ]{1}[a-ząćęłńóśźż]*)? &#60;(([a-z]+\.[a-z]+(-[a-z]+)?)|([a-z]+))@[a-z0-9.-]*\.[a-z]{2,4}>"/>
            <property name="allowMissingParamTags" value="true"/>
        </module>


        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sourceforge.net/config_naming.html -->
        <module name="ConstantName">
            <!-- Standard checker without 'LOG' or log value allowed -->
            <!-- Allowed : e.g. DEFAULT_FIRST_PAID_DAY, log -->
            <!-- Not allowed : e.g. LOG, 123, default_first, defaultFirst -->
            <property name="format" value="^(?!LOG$)[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$|^log$"/>
            <message key="name.invalidPattern"
                     value="Variable ''{0}'' should consist of uppercase letters, digits and underscores. Remark : ''LOG'' is NOT allowed - use ''log''"/>
        </module>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <!--<module name="MemberName"/>-->
        <!--<module name="MethodName"/>-->
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <!-- Checks for Headers                                -->
        <!-- See http://checkstyle.sourceforge.net/config_header.html   -->
        <!-- <module name="Header">                            -->
        <!-- The follow property value demonstrates the ability     -->
        <!-- to have access to ANT properties. In this case it uses -->
        <!-- the ${basedir} property to allow Checkstyle to be run  -->
        <!-- from any directory within a project. See property      -->
        <!-- expansion,                                             -->
        <!-- http://checkstyle.sourceforge.net/config.html#properties        -->
        <!-- <property                                              -->
        <!--     name="headerFile"                                  -->
        <!--     value="${basedir}/java.header"/>                   -->
        <!-- </module> -->

        <!-- Following interprets the header file as regular expressions. -->
        <!-- <module name="RegexpHeader"/>                                -->


        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sourceforge.net/config_imports.html -->
        <module name="AvoidStarImport"/>
        <module name="IllegalImport"/>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>
        <module name="ImportOrder">
            <property name="separated" value="true"/>
            <property name="option" value="top"/>
        </module>


        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sourceforge.net/config_sizes.html -->
        <module name="LineLength">
            <property name="max" value="180"/>
        </module>
        <module name="MethodLength"/>
        <module name="ParameterNumber">
            <property name="max" value="4"/>
        </module>
        <module name="AnonInnerLength"/>

        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sourceforge.net/config_whitespace.html -->
        <!--<module name="EmptyForIteratorPad"/>-->
        <module name="GenericWhitespace"/>
        <!--<module name="MethodParamPad"/>-->
        <module name="NoWhitespaceBefore"/>
        <module name="NoWhitespaceAfter"/>
        <!--<module name="OperatorWrap"/>-->
        <!--<module name="ParenPad"/>-->
        <!--<module name="TypecastParenPad"/>-->
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround">
            <property name="tokens" value="ASSIGN, BAND, BAND_ASSIGN, BOR,
            BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,
            EQUAL, GE, GT, LAND, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,
            LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,
            LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,
            MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,
            SL, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN"/>
            <property name="severity" value="error"/>
        </module>

        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sourceforge.net/config_modifier.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>


        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sourceforge.net/config_blocks.html -->
        <!--<module name="AvoidNestedBlocks"/>-->
        <module name="EmptyBlock"/>
        <!--<module name="LeftCurly"/>-->
        <module name="NeedBraces"/>
        <!--<module name="RightCurly"/>-->


        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sourceforge.net/config_coding.html -->
        <!--<module name="AvoidInlineConditionals"/>-->
        <module name="EmptyStatement"/>
        <!--<module name="EqualsHashCode"/>-->
        <!--<module name="HiddenField"/>-->
        <!--<module name="IllegalInstantiation"/>-->
        <!--<module name="InnerAssignment"/>-->
        <!--<module name="MagicNumber"/>-->
        <module name="MissingSwitchDefault"/>
        <!--<module name="RedundantThrows"/>-->
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="DeclarationOrder"/>
        <module name="OneStatementPerLine"/>

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sourceforge.net/config_design.html -->
        <!--<module name="DesignForExtension"/>-->
        <!--<module name="FinalClass"/>-->
        <!--<module name="HideUtilityClassConstructor"/>-->
        <!--<module name="InterfaceIsType"/>-->
        <!--<module name="VisibilityModifier"/>-->

        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sourceforge.net/config_misc.html -->
        <!--<module name="ArrayTypeStyle"/>-->
        <!--<module name="FinalParameters"/>-->
        <!--<module name="TodoComment"/>-->
        <module name="UpperEll"/>
        <module name="UncommentedMain"/>

        <module name="RegexpSinglelineJava">
            <property name="format" value="^(.*new \w+ \[\] ?\{.* ?\}.*)|(.*new \w+ ?\[\] \{.* ?\}.*)|(.*new \w+\[\]\{.* \}.*)$"/>
            <property name="message" value="No whitespace around ''[]'', no whitespace before ''}''"/>
            <property name="ignoreComments" value="true"/>
        </module>

        <!-- Checks for uncommented main() methods (debugging leftovers) -->
        <module name="UncommentedMain"/>
    </module>
</module>
